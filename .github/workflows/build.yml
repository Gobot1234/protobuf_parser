name: Build and test protobuf_parser

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  build:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ["3.9", "3.10"]
        fail-fast: [false]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1
        with:
          version: 1.2.0a2
          virtualenvs-create: true
          virtualenvs-in-project: true

      # - uses: actions/cache@v2
      #   id: cached-dependecies
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}-no-dev

      - name: Install dependencies
        # if: steps.cached-dependecies.outputs.cache-hit != 'true'
        run: poetry plugin add "poethepoet[poetry_plugin]" && poetry install

      - name: Build wheels
        if: github.action.event_name == 'release'
        run: |
          poetry publish --build --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }}

      - name: Test
        run: |
          cd tests
          poetry run pytest .
